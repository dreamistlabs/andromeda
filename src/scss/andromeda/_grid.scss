/**********************************
  GRID SYSTEM (WIP)
 **********************************/

/*
 * Andromeda's Grid System is based off of a 12-column structure.
 * TODO:
 */

/* thematic/defining variables */

/* referential variables */

$grid-column-margin: $base-marginS;
$grid-column-padding: $base-paddingS;
$col: grid__col;
$col-sm: grid__col-sm;
$col-md: grid__col-md;
$col-lg: grid__col-lg;
$col-xl: grid__col-xl;
$col-width: 8.3333333%;
@mixin build-column-and-offset($s, $i, $w) {
  .#{$s}-#{$i} {
    flex: 0 0 $w;
  }
  @if $i < 12 {
    .#{$s}-offset-#{$i} {
      margin-left: $w;
    }
  }
}

.grid {
  display: flex;
  @include test-border(gray);
}

[class^="#{$col}"] {
  // flex: 1;
  // padding: 0 $grid-column-padding;
  @include test-border(green);
}

/* Base grid column classes applied to all media sizes */

@for $i from 1 through 12 {
  $width: $col-width * $i;
  @include build-column-and-offset($col, $i, $width);
}

@include for-tablet-portrait-up {
  @for $i from 1 through 12 {
    $width: $col-width * $i;
    @include build-column-and-offset($col-sm, $i, $width);
  }
}

@include for-tablet-landscape-up {
  @for $i from 1 through 12 {
    $width: $col-width * $i;
    @include build-column-and-offset($col-md, $i, $width);
  }
}

@include for-desktop-up {
  @for $i from 1 through 12 {
    $width: $col-width * $i;
    @include build-column-and-offset($col-lg, $i, $width);
  }
}

@include for-big-desktop-up {
  @for $i from 1 through 12 {
    $width: $col-width * $i;
    @include build-column-and-offset($col-xl, $i, $width);
  }
}

/* Grid System using CSS Grids */

$default-grid-column-count: 16;
$default-grid-column-gap: 2rem;
$default-grid-row-gap: 2rem;
$base-grid-column-count: $default-grid-column-count;
$base-grid-column-gap: $default-grid-column-gap;
$base-grid-row-gap: $default-grid-row-gap;
@supports (display: grid) {
  .grid {
    display: grid;
    grid-column-gap: $base-grid-column-gap;
  }
  .grid__col {
    grid-column: span 1;
    overflow: hidden;
  }
  @for $i from 1 through $base-grid-column-count {
    .grid.grid--#{$i} {
      grid-template-columns: repeat(#{$i}, [col-start] minmax(0, 1fr));
    }
  }
  @for $i from 1 through $base-grid-column-count {
    .grid__col-start-#{$i} {
      grid-column-start: col-start #{$i};
    }
    .grid__col-#{$i} {
      grid-column-end: span #{$i};
    }
  }
}